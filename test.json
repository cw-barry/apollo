[{
    status: 200,
    statusText: 'OK',
    headers: {
      date: 'Sat, 06 Aug 2022 18:28:03 GMT',
      'content-type': 'application/json; charset=utf-8',
      'content-length': '1024',
      connection: 'close',
      'x-powered-by': 'Express',
      vary: 'Origin',
      'access-control-allow-credentials': 'true',
      etag: 'W/"400-k7z2nrXcYKKgq988tZjfOQ"',
      'set-cookie': [
        'panel=s%3Apw6YxM4kGfpnB_ucuDA2B7hqMIE1eKer.oV9pNCmk7xtqq4QDtGZXnGBK84Ttn5efr45G4AQ9iG8; Path=/; HttpOnly'
      ],
      'cf-cache-status': 'DYNAMIC',
      'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
      'report-to': '{"endpoints":[{"url":"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=dCYjwL5db0FUdnCk4DaqLbEYOQKGQnGrwhgm7X6WIc6glMlFNTKWeY1r9WO%2FcL7JyxpVXQJietIJK941QUiJ2%2F42UcnstBrpAH%2B6y%2BwYI6ki0mDlcmFN%2Fwj%2B1BgXTkYSaSc%3D"}],"group":"cf-nel","max_age":604800}',   
      nel: '{"success_fraction":0,"report_to":"cf-nel","max_age":604800}',
      server: 'cloudflare',
      'cf-ray': '7369d47c29527252-IST',
      'alt-svc': 'h3=":443"; ma=86400, h3-29=":443"; ma=86400'
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: [Function: httpAdapter],
      transformRequest: [ [Function: transformRequest] ],
      transformResponse: [ [Function: transformResponse] ],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: { FormData: [Function] },
      validateStatus: [Function: validateStatus],
      headers: {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'axios/0.27.2',
        'Content-Length': 43
      },
      method: 'post',
      url: 'https://dev.cormind.com/panel/login',
      data: 'username=task&password=123qweasd&react=true'
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype] {
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)],
        prefinish: [Function: requestOnPrefinish]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: TLSSocket {
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'dev.cormind.com',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype],
        _eventsCount: 10,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'dev.cormind.com',
        _readableState: [ReadableState],
        _maxListeners: undefined,
        _writableState: [WritableState],
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: [TLSWrap],
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *1],
        [Symbol(res)]: [TLSWrap],
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 24,
        [Symbol(kHandle)]: [TLSWrap],
        [Symbol(kSetNoDelay)]: false,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0,
        [Symbol(connect-options)]: [Object],
        [Symbol(RequestTimeout)]: undefined
      },
      _header: 'POST /panel/login HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'User-Agent: axios/0.27.2\r\n' +
        'Content-Length: 43\r\n' +
        'Host: dev.cormind.com\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype],
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object: null prototype],
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype],
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        maxCachedSessions: 100,
        _sessionCache: [Object],
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      path: '/panel/login',
      _ended: true,
      res: IncomingMessage {
        _readableState: [ReadableState],
        _events: [Object: null prototype],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [TLSSocket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [Array],
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [TLSSocket],
        _consuming: true,
        _dumped: false,
        req: [Circular *1],
        responseUrl: 'https://dev.cormind.com/panel/login',
        redirects: [],
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: [Object],
        [Symbol(kHeadersCount)]: 32,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0,
        [Symbol(RequestTimeout)]: undefined
      },
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'dev.cormind.com',
      protocol: 'https:',
      _redirectable: Writable {
        _writableState: [WritableState],
        _events: [Object: null prototype],
        _eventsCount: 3,
        _maxListeners: undefined,
        _options: [Object],
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 43,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: [Circular *1],
        _currentUrl: 'https://dev.cormind.com/panel/login',
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [Array],
        'content-type': [Array],
        'user-agent': [Array],
        'content-length': [Array],
        host: [Array]
      }
    },
    data: {
      id: 13,
      image_id: null,
      username: 'task',
      first_name: 'Cormind',
      last_name: 'Task',
      email: 'task@cormind.com',
      password: '$2a$10$7.DhDYlrHkXDxPbwVszApux1rZJnuO1mgOPJiZG4yDjJ1WVPE/UP2',
      notifications: false,
      rules: [ [Object], [Object] ],
      created_at: '2021-11-30T19:00:28.042Z',
      updated_at: '2022-08-02T11:47:44.156Z',
      deleted_at: null,
      user_types: [ 'manager', 'operator', 'technician' ],
      operator: {
        id: 8,
        user_id: 13,
        type: null,
        machine_count: 10,
        created_at: '2021-11-30T19:00:28.526Z',
        updated_at: '2021-11-30T19:00:28.526Z'
      },
      manager: {
        id: 10,
        user_id: 13,
        created_at: '2021-11-30T19:00:28.513Z',
        updated_at: '2021-11-30T19:00:28.513Z'
      },
      technician: {
        id: 7,
        user_id: 13,
        created_at: '2021-11-30T19:00:28.513Z',
        updated_at: '2021-11-30T19:00:28.513Z'
      },
      image: null,
      tempPassword: '$2a$10$7.DhDYlrHkXDxPbwVszApux1rZJnuO1mgOPJiZG4yDjJ1WVPE/UP2'
    }
  }]